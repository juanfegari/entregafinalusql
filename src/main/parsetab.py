
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'leftSUMARESTAleftDIVISIONleftYOACTUALIZA AGREGA_LA_COLUMNA AGRUPANDO_POR BORRA_DE_LA_TABLA CAMBIA_LA_TABLA CLAVE_PRIMA CLAVE_REFERENTE COMA COMO_MUCHO CONTANDO COUNT CREA_LA_TABLA DE_LA_TABLA DIVISION DONDE ELIMINA_LA_COLUMNA EN ENTRE EN_ESTO ES_NULO EXISTE IGUAL LOS_DISTINTOS LOS_VALORES MAYOR_IGUAL MAYOR_QUE MENOR_IGUAL MENOR_QUE METE_EN MEZCLANDO NOMBRE NO_NULO NUMERO O ORDENA_POR PARECIDO_A PARENDER PARENIZQ POR_DEFECTO PUNTO PUNTO_COMA RESTA SETEA STRING SUMA TIRA_LA_TABLA TODO TRAEME TRANSFORMA_A UNICO VARCHAR WHERE_DEL_GROUP_BY Ystatement : select_statement\n                 | insert_statement\n                 | update_statement\n                 | delete_statement\n                 | alter_statementselect_statement : TRAEME columns DE_LA_TABLA NOMBRE join_clause condition_opt PUNTO_COMA\n                        | TRAEME columns DE_LA_TABLA NOMBRE join_clause condition_opt group_clause PUNTO_COMAjoin_clause : MEZCLANDO NOMBRE EN join_condition\n                   | emptygroup_clause : AGRUPANDO_POR NOMBRE\n                    | AGRUPANDO_POR NOMBRE WHERE_DEL_GROUP_BY condition_count\n                    | emptycondition_count : COUNT PARENIZQ TODO PARENDER comparison value\n                       | emptyjoin_condition : NOMBRE IGUAL NOMBRE\n                      | NOMBRE PUNTO NOMBRE IGUAL NOMBRE PUNTO NOMBRE\n                      | NOMBRE comparison valuecondition_opt : condition_s\n                     | emptyempty :columns : TODO\n               | columns_list\n               | countingcounting : CONTANDO PARENIZQ TODO PARENDERcolumns_list : NOMBRE\n                    | columns_list COMA NOMBREcolumns : LOS_DISTINTOS NOMBREcondition_s : DONDE NOMBRE comparison value\n                   | DONDE NOMBRE PUNTO NOMBRE comparison valuevalue : NUMERO\n             | STRINGcomparison : MAYOR_QUE\n                  | MENOR_QUE\n                  | IGUAL\n                  | MAYOR_IGUAL\n                  | MENOR_IGUALinsert_statement : METE_EN NOMBRE PARENIZQ columns_list PARENDER LOS_VALORES PARENIZQ values_list PARENDER PUNTO_COMAvalues_list : value\n                   | values_list COMA valueupdate_statement : ACTUALIZA NOMBRE SETEA assignments DONDE condition_where PUNTO_COMAassignments : NOMBRE IGUAL value\n                   | assignments COMA NOMBRE IGUAL valuecondition_where : NOMBRE comparison value\n                       | NOMBRE PUNTO NOMBRE comparison value\n                       | NOMBRE ENTRE value Y valuedelete_statement : BORRA_DE_LA_TABLA NOMBRE DONDE condition_where PUNTO_COMAalter_statement : CAMBIA_LA_TABLA NOMBRE alter_actions PUNTO_COMAalter_actions : AGREGA_LA_COLUMNA NOMBRE VARCHAR PARENIZQ NUMERO PARENDER NO_NULO\n                     | ELIMINA_LA_COLUMNA NOMBRE'
    
_lr_action_items = {'TRAEME':([0,],[7,]),'METE_EN':([0,],[8,]),'ACTUALIZA':([0,],[9,]),'BORRA_DE_LA_TABLA':([0,],[10,]),'CAMBIA_LA_TABLA':([0,],[11,]),'$end':([1,2,3,4,5,6,41,60,77,84,89,117,],[0,-1,-2,-3,-4,-5,-47,-46,-6,-40,-7,-37,]),'TODO':([7,26,119,],[14,35,122,]),'LOS_DISTINTOS':([7,],[17,]),'NOMBRE':([7,8,9,10,11,17,23,24,27,28,29,31,32,45,50,51,53,65,79,82,92,104,105,121,125,],[13,19,20,21,22,25,33,34,13,37,39,42,43,66,39,72,74,81,90,93,103,114,115,123,127,]),'CONTANDO':([7,],[18,]),'DE_LA_TABLA':([12,13,14,15,16,25,34,47,],[23,-25,-21,-22,-23,-27,-26,-24,]),'COMA':([13,15,34,36,38,68,69,70,95,96,97,118,],[-25,24,-26,24,51,-41,-30,-31,108,-38,-42,-39,]),'PARENDER':([13,34,35,36,69,70,88,95,96,118,122,],[-25,-26,47,48,-30,-31,100,107,-38,-39,124,]),'PARENIZQ':([18,19,61,67,111,],[26,27,76,83,119,]),'SETEA':([20,],[28,]),'DONDE':([21,33,38,44,46,68,69,70,94,97,114,116,127,],[29,-20,50,65,-9,-41,-30,-31,-8,-42,-15,-17,-16,]),'AGREGA_LA_COLUMNA':([22,],[31,]),'ELIMINA_LA_COLUMNA':([22,],[32,]),'PUNTO_COMA':([30,33,40,43,44,46,62,63,64,69,70,71,73,78,80,90,94,98,99,101,102,107,109,110,112,114,116,120,127,128,],[41,-20,60,-49,-20,-9,77,-18,-19,-30,-31,84,-43,89,-12,-10,-8,-44,-45,-20,-28,117,-48,-11,-14,-15,-17,-29,-16,-13,]),'MEZCLANDO':([33,],[45,]),'AGRUPANDO_POR':([33,44,46,62,63,64,69,70,94,102,114,116,120,127,],[-20,-20,-9,79,-18,-19,-30,-31,-8,-28,-15,-17,-29,-16,]),'IGUAL':([37,39,72,74,81,93,103,115,124,],[49,57,85,57,57,104,57,121,57,]),'PUNTO':([39,81,93,123,],[53,92,105,125,]),'ENTRE':([39,],[54,]),'MAYOR_QUE':([39,74,81,93,103,124,],[55,55,55,55,55,55,]),'MENOR_QUE':([39,74,81,93,103,124,],[56,56,56,56,56,56,]),'MAYOR_IGUAL':([39,74,81,93,103,124,],[58,58,58,58,58,58,]),'MENOR_IGUAL':([39,74,81,93,103,124,],[59,59,59,59,59,59,]),'VARCHAR':([42,],[61,]),'LOS_VALORES':([48,],[67,]),'NUMERO':([49,52,54,55,56,57,58,59,76,83,85,86,87,91,104,106,108,113,126,],[69,69,69,-32,-33,-34,-35,-36,88,69,69,69,69,69,-34,69,69,69,69,]),'STRING':([49,52,54,55,56,57,58,59,83,85,86,87,91,104,106,108,113,126,],[70,70,70,-32,-33,-34,-35,-36,70,70,70,70,70,-34,70,70,70,70,]),'EN':([66,],[82,]),'Y':([69,70,75,],[-30,-31,87,]),'WHERE_DEL_GROUP_BY':([90,],[101,]),'NO_NULO':([100,],[109,]),'COUNT':([101,],[111,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'statement':([0,],[1,]),'select_statement':([0,],[2,]),'insert_statement':([0,],[3,]),'update_statement':([0,],[4,]),'delete_statement':([0,],[5,]),'alter_statement':([0,],[6,]),'columns':([7,],[12,]),'columns_list':([7,27,],[15,36,]),'counting':([7,],[16,]),'alter_actions':([22,],[30,]),'assignments':([28,],[38,]),'condition_where':([29,50,],[40,71,]),'join_clause':([33,],[44,]),'empty':([33,44,62,101,],[46,64,80,112,]),'comparison':([39,74,81,93,103,124,],[52,86,91,106,113,126,]),'condition_opt':([44,],[62,]),'condition_s':([44,],[63,]),'value':([49,52,54,83,85,86,87,91,106,108,113,126,],[68,73,75,96,97,98,99,102,116,118,120,128,]),'group_clause':([62,],[78,]),'join_condition':([82,],[94,]),'values_list':([83,],[95,]),'condition_count':([101,],[110,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> statement","S'",1,None,None,None),
  ('statement -> select_statement','statement',1,'p_statement','traductorUSQLaSQL.py',110),
  ('statement -> insert_statement','statement',1,'p_statement','traductorUSQLaSQL.py',111),
  ('statement -> update_statement','statement',1,'p_statement','traductorUSQLaSQL.py',112),
  ('statement -> delete_statement','statement',1,'p_statement','traductorUSQLaSQL.py',113),
  ('statement -> alter_statement','statement',1,'p_statement','traductorUSQLaSQL.py',114),
  ('select_statement -> TRAEME columns DE_LA_TABLA NOMBRE join_clause condition_opt PUNTO_COMA','select_statement',7,'p_select_statement','traductorUSQLaSQL.py',119),
  ('select_statement -> TRAEME columns DE_LA_TABLA NOMBRE join_clause condition_opt group_clause PUNTO_COMA','select_statement',8,'p_select_statement','traductorUSQLaSQL.py',120),
  ('join_clause -> MEZCLANDO NOMBRE EN join_condition','join_clause',4,'p_join_clause','traductorUSQLaSQL.py',130),
  ('join_clause -> empty','join_clause',1,'p_join_clause','traductorUSQLaSQL.py',131),
  ('group_clause -> AGRUPANDO_POR NOMBRE','group_clause',2,'p_group_clause','traductorUSQLaSQL.py',135),
  ('group_clause -> AGRUPANDO_POR NOMBRE WHERE_DEL_GROUP_BY condition_count','group_clause',4,'p_group_clause','traductorUSQLaSQL.py',136),
  ('group_clause -> empty','group_clause',1,'p_group_clause','traductorUSQLaSQL.py',137),
  ('condition_count -> COUNT PARENIZQ TODO PARENDER comparison value','condition_count',6,'p_condition_count','traductorUSQLaSQL.py',144),
  ('condition_count -> empty','condition_count',1,'p_condition_count','traductorUSQLaSQL.py',145),
  ('join_condition -> NOMBRE IGUAL NOMBRE','join_condition',3,'p_join_condition','traductorUSQLaSQL.py',149),
  ('join_condition -> NOMBRE PUNTO NOMBRE IGUAL NOMBRE PUNTO NOMBRE','join_condition',7,'p_join_condition','traductorUSQLaSQL.py',150),
  ('join_condition -> NOMBRE comparison value','join_condition',3,'p_join_condition','traductorUSQLaSQL.py',151),
  ('condition_opt -> condition_s','condition_opt',1,'p_condition_opt','traductorUSQLaSQL.py',158),
  ('condition_opt -> empty','condition_opt',1,'p_condition_opt','traductorUSQLaSQL.py',159),
  ('empty -> <empty>','empty',0,'p_empty','traductorUSQLaSQL.py',162),
  ('columns -> TODO','columns',1,'p_columns','traductorUSQLaSQL.py',166),
  ('columns -> columns_list','columns',1,'p_columns','traductorUSQLaSQL.py',167),
  ('columns -> counting','columns',1,'p_columns','traductorUSQLaSQL.py',168),
  ('counting -> CONTANDO PARENIZQ TODO PARENDER','counting',4,'p_counting','traductorUSQLaSQL.py',175),
  ('columns_list -> NOMBRE','columns_list',1,'p_columns_list','traductorUSQLaSQL.py',179),
  ('columns_list -> columns_list COMA NOMBRE','columns_list',3,'p_columns_list','traductorUSQLaSQL.py',180),
  ('columns -> LOS_DISTINTOS NOMBRE','columns',2,'p_columns_distinct','traductorUSQLaSQL.py',187),
  ('condition_s -> DONDE NOMBRE comparison value','condition_s',4,'p_condition_where_s','traductorUSQLaSQL.py',191),
  ('condition_s -> DONDE NOMBRE PUNTO NOMBRE comparison value','condition_s',6,'p_condition_where_s','traductorUSQLaSQL.py',192),
  ('value -> NUMERO','value',1,'p_value','traductorUSQLaSQL.py',199),
  ('value -> STRING','value',1,'p_value','traductorUSQLaSQL.py',200),
  ('comparison -> MAYOR_QUE','comparison',1,'p_comparison_gt','traductorUSQLaSQL.py',204),
  ('comparison -> MENOR_QUE','comparison',1,'p_comparison_gt','traductorUSQLaSQL.py',205),
  ('comparison -> IGUAL','comparison',1,'p_comparison_gt','traductorUSQLaSQL.py',206),
  ('comparison -> MAYOR_IGUAL','comparison',1,'p_comparison_gt','traductorUSQLaSQL.py',207),
  ('comparison -> MENOR_IGUAL','comparison',1,'p_comparison_gt','traductorUSQLaSQL.py',208),
  ('insert_statement -> METE_EN NOMBRE PARENIZQ columns_list PARENDER LOS_VALORES PARENIZQ values_list PARENDER PUNTO_COMA','insert_statement',10,'p_insert_statement','traductorUSQLaSQL.py',213),
  ('values_list -> value','values_list',1,'p_values_list','traductorUSQLaSQL.py',217),
  ('values_list -> values_list COMA value','values_list',3,'p_values_list','traductorUSQLaSQL.py',218),
  ('update_statement -> ACTUALIZA NOMBRE SETEA assignments DONDE condition_where PUNTO_COMA','update_statement',7,'p_update_statement','traductorUSQLaSQL.py',226),
  ('assignments -> NOMBRE IGUAL value','assignments',3,'p_assignments','traductorUSQLaSQL.py',230),
  ('assignments -> assignments COMA NOMBRE IGUAL value','assignments',5,'p_assignments','traductorUSQLaSQL.py',231),
  ('condition_where -> NOMBRE comparison value','condition_where',3,'p_condition_where','traductorUSQLaSQL.py',238),
  ('condition_where -> NOMBRE PUNTO NOMBRE comparison value','condition_where',5,'p_condition_where','traductorUSQLaSQL.py',239),
  ('condition_where -> NOMBRE ENTRE value Y value','condition_where',5,'p_condition_where','traductorUSQLaSQL.py',240),
  ('delete_statement -> BORRA_DE_LA_TABLA NOMBRE DONDE condition_where PUNTO_COMA','delete_statement',5,'p_delete_statement','traductorUSQLaSQL.py',250),
  ('alter_statement -> CAMBIA_LA_TABLA NOMBRE alter_actions PUNTO_COMA','alter_statement',4,'p_alter_statement','traductorUSQLaSQL.py',255),
  ('alter_actions -> AGREGA_LA_COLUMNA NOMBRE VARCHAR PARENIZQ NUMERO PARENDER NO_NULO','alter_actions',7,'p_alter_actions','traductorUSQLaSQL.py',259),
  ('alter_actions -> ELIMINA_LA_COLUMNA NOMBRE','alter_actions',2,'p_alter_actions','traductorUSQLaSQL.py',260),
]
